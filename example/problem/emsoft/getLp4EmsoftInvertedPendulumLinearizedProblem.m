function [vars, f, eps, g_theta, g_psy, g_zeta] = getLp4EmsoftInvertedPendulumLinearizedProblem()

% from https://github.com/dreal/benchmarks/blob/master/inv/inverted_pendulum_linearized.inv
% barrier:
% 2.6132091261160179662681457557483*x1^2 + 5.3337517151510649426882082480006*x1*x2 - 26.429614724711921525113211828284*x1*x3 - 6.6206801732729632092855354130734*x1*x4 + 4.5817259017870872739308651944157*x2^2 - 48.233137865255159226762771140784*x2*x3 - 12.23395703407775769733234483283*x2*x4 + 139.29609345636919215394300408661*x3^2 + 71.639069391630783911750768311322*x3*x4 + 9.4371334500327161975974377128296*x4^2 - 0.1;

% independent variables
syms x1 x2 x3 x4;
vars = [x1, x2, x3, x4];

% Constructing the vector field dx/dt = f
f = [x2;
    0.089142857142200312980939713725093*x1 + 0.29567346938612398821177862373588*x2 - 13.419657142843739450199791463092*x3 - 2.0782693877508733315551125997445*x4;
    x4;
    0.22285714285550081714681880384887*x1 + 0.73918367346531010930732463748427*x2 - 9.0491428571093557309268362587318*x3 - 5.1956734693771835509323864243925*x4];

eps = [0.001, 0.001];

% Constructing the theta constraint
g_theta = (vars+0.001)/0.002;

% Constructing the psy constraint
g_psy = (vars+1)/2;

% Constructing the zeta constraint
g_zeta = (vars-0.9)*10;

end
